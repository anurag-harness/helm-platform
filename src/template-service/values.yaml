# Default values for template-service
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: ""
  ingress:
    enabled: false
    className: harness
    hosts:
      - my-host.example.org
    tls:
      enabled: true
      secretName: ''
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
  imagePullSecrets: []
replicaCount: 1
maxSurge: 1
maxUnavailable: 0

config:
  CACHE_BACKEND: REDIS
  CACHE_CONFIG_REDIS_SENTINELS: 'redis://redis-sentinel-harness-announce-0.{{ .Release.Namespace  }}:26379,redis://redis-sentinel-harness-announce-1.{{ .Release.Namespace  }}:26379,redis://redis-sentinel-harness-announce-2.{{ .Release.Namespace  }}:26379'
  CACHE_CONFIG_SENTINEL_MASTER_NAME: harness-redis
  CACHE_CONFIG_USE_SENTINEL: true
  DEPLOY_MODE: KUBERNETES_ONPREM
  MANAGER_TARGET:
  MANAGER_AUTHORITY:
  NG_MANAGER_GITSYNC_TARGET:
  NG_MANAGER_GITSYNC_AUTHORITY:
  SCM_SERVICE_URI:
  EVENTS_FRAMEWORK_REDIS_URL:
  EVENTS_FRAMEWORK_USE_SENTINEL: true
  EVENTS_FRAMEWORK_SENTINEL_MASTER_NAME: harness-redis
  EVENTS_FRAMEWORK_REDIS_SENTINELS: 'redis://redis-sentinel-harness-announce-0.{{ .Release.Namespace  }}:26379,redis://redis-sentinel-harness-announce-1.{{ .Release.Namespace  }}:26379,redis://redis-sentinel-harness-announce-2.{{ .Release.Namespace  }}:26379'
  ENABLE_AUTH: true
  ENABLE_GIT_SYNC: true
  ENABLE_AUDIT: true
  ACCESS_CONTROL_ENABLED: true
  ENFORCEMENT_CHECK_ENABLED: true
  NG_MANAGER_BASE_URL:
  ACCESS_CONTROL_BASE_URL: 'http://access-control.{{ .Release.Namespace }}.svc.cluster.local:9006/api/'
  AUDIT_SERVICE_BASE_URL: 'http://platform-service.{{ .Release.Namespace }}.svc.cluster.local:9005/api/'
  SERVER_PORT:
  PMS_GRPC_AUTHORITY:
  PMS_GRPC_TARGET:
  MANAGER_CLIENT_BASEURL:

image:
  registry: docker.io
  repository: harness/template-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "76019"
  digest: ""
  imagePullSecrets: []

mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password

timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

appLogLevel: INFO

java:
  memory: "1024m"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true

service:
  type: ClusterIP
  protocol: TCP
  port: 15002
  grpcport: 15011
  gitsyncgrpcport: 16002

resources:
  limits:
    cpu: 1
    memory: 1400Mi
  requests:
    cpu: 1
    memory: 1400Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

imagePullSecrets: {}
